[tox]
envlist = py27,pep8
minversion = 1.6
skipsdist = True

[testenv]
basepython=python2.7
usedevelop = True
install_command = pip install -U {opts} {packages}
setenv = VIRTUAL_ENV={envdir}
# Note the hash seed is set to 0 until horizon can be tested with a
# random hash seed successfully.
#  PYTHONHASHSEED=0
deps =
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/test-requirements.txt
  http://tarballs.openstack.org/horizon/horizon-master.tar.gz
  http://tarballs.openstack.org/python-apmecclient/python-apmecclient-master.tar.gz

commands =
  {envpython} {toxinidir}/manage.py test apmec_horizon --settings=apmec_horizon.test.settings {posargs}

[testenv:py27]
commands =
  {envpython} {toxinidir}/manage.py test apmec_horizon --settings=apmec_horizon.test.settings {posargs}

[tox:jenkins]

[testenv:pep8]
usedevelop = True
whitelist_externals =
  git
setenv =
  {[testenv]setenv}
  DJANGO_SETTINGS_MODULE=apmec_horizon.test.settings
commands =
  flake8

[testenv:doc]
deps = Sphinx
commands = sphinx-build doc/source doc/build

[testenv:cover]
setenv = NOSE_WITH_COVERAGE=1

[testenv:venv]
commands = {posargs}

[flake8]
show-source = True
max-complexity = 20

[testenv:makemessages]
commands =
    pybabel extract -F babel-django.cfg -o apmec_horizon/locale/django.pot -k gettext_noop -k gettext_lazy -k ngettext_lazy:1,2 -k ugettext_noop -k ugettext_lazy -k ungettext_lazy:1,2 -k npgettext:1c,2,3 -k pgettext_lazy:1c,2 -k npgettext_lazy:1c,2,3 apmec_horizon
    pybabel extract -F babel-djangojs.cfg -o apmec_horizon/locale/djangojs.pot -k gettext_noop -k gettext_lazy -k ngettext_lazy:1,2 -k ugettext_noop -k ugettext_lazy -k ungettext_lazy:1,2 -k npgettext:1c,2,3 -k pgettext_lazy:1c,2 -k npgettext_lazy:1c,2,3 apmec_horizon
